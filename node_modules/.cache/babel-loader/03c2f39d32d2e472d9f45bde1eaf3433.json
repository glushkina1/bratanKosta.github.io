{"ast":null,"code":"var _jsxFileName = \"/Users/anastasiia/tie-tac-toe/src/App.js\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  var _s = $RefreshSig$();\n\n  function Square(_ref) {\n    let {\n      onClick,\n      value\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"square\",\n      onClick: onClick,\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  }\n\n  function Board() {\n    _s();\n\n    const [squares, setSquares] = useState(Array(9).fill(null));\n    const [isX, setIsX] = useState(true);\n\n    const handleClick = i => {\n      if (calculateWinner(squares) || squares[i]) {\n        return;\n      }\n\n      squares[i] = isX ? 'X' : 'O';\n      setSquares(squares);\n      setIsX(!isX);\n    };\n\n    const winner = calculateWinner(squares);\n    let status;\n\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = 'Next player: ' + (isX ? 'X' : 'O');\n    }\n\n    const handleRestart = () => {\n      setIsX(true);\n      setSquares(Array(9).fill(null));\n    };\n\n    const renderSquare = i => {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[i],\n        onClick: () => handleClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 14\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [renderSquare(0), renderSquare(1), renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [renderSquare(3), renderSquare(4), renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [renderSquare(6), renderSquare(7), renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"restart\",\n        onClick: handleRestart,\n        children: \"Restart Game!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n\n  _s(Board, \"Lwm+ZND6GGQcWWR+UaVfZE724ME=\");\n\n  ReactDOM.render( /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this), document.getElementById('root'));\n\n  function calculateWinner(squares) {\n    const winningPatterns = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n    for (let i = 0; i < winningPatterns.length; i++) {\n      const [a, b, c] = winningPatterns[i];\n\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"App-link\",\n        href: \"https://reactjs.org\",\n        children: \"Learn React\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","App","Square","onClick","value","Board","squares","setSquares","Array","fill","isX","setIsX","handleClick","i","calculateWinner","winner","status","handleRestart","renderSquare","ReactDOM","render","document","getElementById","winningPatterns","length","a","b","c"],"sources":["/Users/anastasiia/tie-tac-toe/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useState } from \"react\";\n\nfunction App() {\n  function Square({ onClick, value }) {\n    return (\n        <button className=\"square\" onClick={onClick}>\n          {value}\n        </button>\n    );\n  }\n\n  function Board () {\n    const [squares, setSquares] = useState(Array(9).fill(null))\n    const [isX, setIsX] = useState(true);\n\n    const handleClick = (i) => {\n      if (calculateWinner(squares) || squares[i]) {\n        return\n      }\n\n      squares[i] = isX ? 'X' : 'O'\n      setSquares(squares)\n      setIsX(!isX)\n    }\n\n    const winner = calculateWinner(squares)\n    let status\n\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = 'Next player: ' + (isX ? 'X' : 'O');\n    }\n\n    const handleRestart = () => {\n      setIsX(true)\n      setSquares(Array(9).fill(null))\n    }\n\n    const renderSquare = (i) => {\n      return <Square value={squares[i]} onClick={() => handleClick(i)} />\n    }\n\n    return (\n        <div className=\"board\">\n          <div className=\"board-row\">\n            {renderSquare(0)}\n            {renderSquare(1)}\n            {renderSquare(2)}\n          </div>\n          <div className=\"board-row\">\n            {renderSquare(3)}\n            {renderSquare(4)}\n            {renderSquare(5)}\n          </div>\n          <div className=\"board-row\">\n            {renderSquare(6)}\n            {renderSquare(7)}\n            {renderSquare(8)}\n          </div>\n          <div className=\"status\">{status}</div>\n          <button className=\"restart\" onClick={handleRestart}>Restart Game!</button>\n        </div>\n    )\n  }\n\n  ReactDOM.render(\n      <Board />,\n      document.getElementById('root')\n  );\n\n  function calculateWinner(squares) {\n    const winningPatterns = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ]\n\n    for (let i = 0; i < winningPatterns.length; i++) {\n      const [a, b, c] = winningPatterns[i];\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        return squares[a];\n      }\n    }\n    return null;\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}